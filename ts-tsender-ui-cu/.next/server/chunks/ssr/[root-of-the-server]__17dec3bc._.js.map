{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///home/firefly/full-stack/ts-tsender-ui-cu/src/rainbowKitConfig.tsx"],"sourcesContent":["\"use client\";\n\nimport { getDefaultConfig } from \"@rainbow-me/rainbowkit\";\nimport { anvil, zksync } from \"viem/chains\";\n\nexport default getDefaultConfig({\n  appName: \"TSender\",\n  chains: [anvil, zksync],\n  projectId: process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID!,\n  ssr: false,\n});\n"],"names":[],"mappings":";;;AAEA;AACA;AAAA;AAHA;;;uCAKe,CAAA,GAAA,yXAAA,CAAA,mBAAgB,AAAD,EAAE;IAC9B,SAAS;IACT,QAAQ;QAAC,6TAAA,CAAA,QAAK;QAAE,8TAAA,CAAA,SAAM;KAAC;IACvB,SAAS;IACT,KAAK;AACP","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/firefly/full-stack/ts-tsender-ui-cu/src/app/providers.tsx"],"sourcesContent":["\"use client\";\n\nimport { type ReactNode } from \"react\";\nimport config from \"../rainbowKitConfig\";\nimport { WagmiProvider } from \"wagmi\";\nimport { RainbowKitProvider } from \"@rainbow-me/rainbowkit\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport \"@rainbow-me/rainbowkit/styles.css\";\nexport function Providers(props: { children: ReactNode }) {\n  const [queryClient] = useState(() => new QueryClient());\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        <RainbowKitProvider>{props.children}</RainbowKitProvider>\n      </QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAEA;AAAA;AACA;AARA;;;;;;;;AAUO,SAAS,UAAU,KAA8B;IACtD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI,sPAAA,CAAA,cAAW;IACpD,qBACE,6WAAC,+VAAA,CAAA,gBAAa;QAAC,QAAQ,wHAAA,CAAA,UAAM;kBAC3B,cAAA,6WAAC,sRAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAC3B,cAAA,6WAAC,yXAAA,CAAA,qBAAkB;0BAAE,MAAM,QAAQ;;;;;;;;;;;;;;;;AAI3C","debugId":null}}]
}